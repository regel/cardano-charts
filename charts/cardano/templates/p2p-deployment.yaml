apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: "{{ include "cardano.fullname" . }}-p2p"
  labels:
    app.kubernetes.io/component: p2p
    {{- include "cardano.labels" . | nindent 4 }}
  annotations:
    checkov.io/skip1: CKV_K8S_20="NET_BIND_SERVICE required to bind tcp port."
    checkov.io/skip2: CKV_K8S_25="added NET_BIND_SERVICE."
  {{- if .Values.commonAnnotations }}
  {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.p2p.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/component: p2p
      {{- include "cardano.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/testnet: {{ include (print $.Template.BasePath "/p2p-configmap.yaml") . | sha256sum }}
    {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        app.kubernetes.io/component: p2p
        {{- include "cardano.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: p2p
          securityContext:
            runAsUser: 65532
            readOnlyRootFilesystem: true
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
          image: "{{- .Values.p2p.repository -}}:{{- .Values.p2p.tag | default .Chart.AppVersion -}}"
          imagePullPolicy: {{ .Values.p2p.pullPolicy }}
          resources:
            limits:
              cpu: "100m"
              memory: "64Mi"
          args:
            - p2p
            - --config
            - /p2p.yaml
          volumeMounts:
            - name: config
              mountPath: /p2p.yaml
              subPath: p2p.yaml
              readOnly: true
          {{- if .Values.p2p.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.p2p.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.p2p.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ add1 .Values.p2p.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.p2p.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.p2p.livenessProbe.failureThreshold }}
            tcpSocket:
              port: 8080
          {{- end }}
          {{- if .Values.p2p.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.p2p.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.p2p.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ add1 .Values.p2p.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.p2p.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.p2p.readinessProbe.failureThreshold }}
            tcpSocket:
              port: 8080
          {{- end }}
          ports:
            - name: p2p
              containerPort: 8080
              protocol: TCP

      volumes:
        - name: config
          configMap:
            name: {{ template "cardano.configName" . }}-p2p
